Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ds_dsd = cat['ACLOUD']['P5']['DROPSONDES']['ACLOUD_P5_RF05'](i_sonde=1).to_dask()
ds_dsd
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mClientResponseError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_594802/3635307007.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mds_dsd[0m [0;34m=[0m [0mcat[0m[0;34m[[0m[0;34m'ACLOUD'[0m[0;34m][0m[0;34m[[0m[0;34m'P5'[0m[0;34m][0m[0;34m[[0m[0;34m'DROPSONDES'[0m[0;34m][0m[0;34m[[0m[0;34m'ACLOUD_P5_RF05'[0m[0;34m][0m[0;34m([0m[0mi_sonde[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m.[0m[0mto_dask[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mds_dsd[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake_xarray/base.py[0m in [0;36mto_dask[0;34m(self)[0m
[1;32m     67[0m     [0;32mdef[0m [0mto_dask[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     68[0m         [0;34m"""Return xarray object where variables are dask arrays"""[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 69[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mread_chunked[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     70[0m [0;34m[0m[0m
[1;32m     71[0m     [0;32mdef[0m [0mclose[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake_xarray/base.py[0m in [0;36mread_chunked[0;34m(self)[0m
[1;32m     42[0m     [0;32mdef[0m [0mread_chunked[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     43[0m         [0;34m"""Return xarray object (which will have chunks)"""[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 44[0;31m         [0mself[0m[0;34m.[0m[0m_load_metadata[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     45[0m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_ds[0m[0;34m[0m[0;34m[0m[0m
[1;32m     46[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/source/base.py[0m in [0;36m_load_metadata[0;34m(self)[0m
[1;32m    124[0m         [0;34m"""load metadata only if needed"""[0m[0;34m[0m[0;34m[0m[0m
[1;32m    125[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_schema[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 126[0;31m             [0mself[0m[0;34m.[0m[0m_schema[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_schema[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    127[0m             [0mself[0m[0;34m.[0m[0mdatashape[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_schema[0m[0;34m.[0m[0mdatashape[0m[0;34m[0m[0;34m[0m[0m
[1;32m    128[0m             [0mself[0m[0;34m.[0m[0mdtype[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_schema[0m[0;34m.[0m[0mdtype[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake_xarray/base.py[0m in [0;36m_get_schema[0;34m(self)[0m
[1;32m     16[0m [0;34m[0m[0m
[1;32m     17[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_ds[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 18[0;31m             [0mself[0m[0;34m.[0m[0m_open_dataset[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     19[0m [0;34m[0m[0m
[1;32m     20[0m             metadata = {

[0;32m/usr/local/lib/python3.8/dist-packages/intake_xarray/netcdf.py[0m in [0;36m_open_dataset[0;34m(self)[0m
[1;32m     85[0m [0;34m[0m[0m
[1;32m     86[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_can_be_local[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 87[0;31m             [0murl[0m [0;34m=[0m [0mfsspec[0m[0;34m.[0m[0mopen_local[0m[0;34m([0m[0mself[0m[0;34m.[0m[0murlpath[0m[0;34m,[0m [0;34m**[0m[0mself[0m[0;34m.[0m[0mstorage_options[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     88[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     89[0m             [0;31m# https://github.com/intake/filesystem_spec/issues/476#issuecomment-732372918[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/core.py[0m in [0;36mopen_local[0;34m(url, mode, **storage_options)[0m
[1;32m    462[0m             [0;34m" has attribute local_file=True"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    463[0m         )
[0;32m--> 464[0;31m     [0;32mwith[0m [0mof[0m [0;32mas[0m [0mfiles[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    465[0m         [0mpaths[0m [0;34m=[0m [0;34m[[0m[0mf[0m[0;34m.[0m[0mname[0m [0;32mfor[0m [0mf[0m [0;32min[0m [0mfiles[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    466[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mstr[0m[0;34m)[0m [0;32mand[0m [0;32mnot[0m [0mhas_magic[0m[0;34m([0m[0murl[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/core.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m    176[0m             [0;32mif[0m [0mhasattr[0m[0;34m([0m[0mfs[0m[0;34m,[0m [0;34m"open_many"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    177[0m                 [0;31m# check for concurrent cache download; or set up for upload[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 178[0;31m                 [0mself[0m[0;34m.[0m[0mfiles[0m [0;34m=[0m [0mfs[0m[0;34m.[0m[0mopen_many[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    179[0m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mfiles[0m[0;34m[0m[0;34m[0m[0m
[1;32m    180[0m             [0;32mif[0m [0mhasattr[0m[0;34m([0m[0mfs[0m[0;34m,[0m [0;34m"fs"[0m[0;34m)[0m [0;32mand[0m [0mfs[0m[0;34m.[0m[0mfs[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/implementations/cached.py[0m in [0;36m<lambda>[0;34m(*args, **kw)[0m
[1;32m    384[0m             [0;31m# all the methods defined in this class. Note `open` here, since[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    385[0m             [0;31m# it calls `_open`, but is actually in superclass[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 386[0;31m             [0;32mreturn[0m [0;32mlambda[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkw[0m[0;34m:[0m [0mgetattr[0m[0;34m([0m[0mtype[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m,[0m [0mitem[0m[0;34m)[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    387[0m         [0;32mif[0m [0mitem[0m [0;32min[0m [0;34m[[0m[0;34m"__reduce_ex__"[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    388[0m             [0;32mraise[0m [0mAttributeError[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/implementations/cached.py[0m in [0;36mopen_many[0;34m(self, open_files)[0m
[1;32m    452[0m         [0;32mif[0m [0mdownpath[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    453[0m             [0;31m# skip if all files are already cached and up to date[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 454[0;31m             [0mself[0m[0;34m.[0m[0mfs[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mdownpath[0m[0;34m,[0m [0mdownfn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    455[0m [0;34m[0m[0m
[1;32m    456[0m             [0;31m# update metadata - only happens when downloads are successful[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36mget[0;34m(self, rpath, lpath, recursive, **kwargs)[0m
[1;32m    292[0m         [0mlpaths[0m [0;34m=[0m [0mother_paths[0m[0;34m([0m[0mrpaths[0m[0;34m,[0m [0mlpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    293[0m         [0;34m[[0m[0mos[0m[0;34m.[0m[0mmakedirs[0m[0;34m([0m[0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mdirname[0m[0;34m([0m[0mlp[0m[0;34m)[0m[0;34m,[0m [0mexist_ok[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m [0;32mfor[0m [0mlp[0m [0;32min[0m [0mlpaths[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 294[0;31m         [0;32mreturn[0m [0msync[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mloop[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m_get[0m[0;34m,[0m [0mrpaths[0m[0;34m,[0m [0mlpaths[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    295[0m [0;34m[0m[0m
[1;32m    296[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36msync[0;34m(loop, func, callback_timeout, *args, **kwargs)[0m
[1;32m     69[0m     [0;32mif[0m [0merror[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     70[0m         [0mtyp[0m[0;34m,[0m [0mexc[0m[0;34m,[0m [0mtb[0m [0;34m=[0m [0merror[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 71[0;31m         [0;32mraise[0m [0mexc[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mtb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     72[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     73[0m         [0;32mreturn[0m [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36mf[0;34m()[0m
[1;32m     53[0m             [0;32mif[0m [0mcallback_timeout[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     54[0m                 [0mfuture[0m [0;34m=[0m [0masyncio[0m[0;34m.[0m[0mwait_for[0m[0;34m([0m[0mfuture[0m[0;34m,[0m [0mcallback_timeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 55[0;31m             [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m=[0m [0;32mawait[0m [0mfuture[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     56[0m         [0;32mexcept[0m [0mException[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     57[0m             [0merror[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m=[0m [0msys[0m[0;34m.[0m[0mexc_info[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36m_get[0;34m(self, rpaths, lpaths, **kwargs)[0m
[1;32m    277[0m         [0mdirs[0m [0;34m=[0m [0;34m[[0m[0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mdirname[0m[0;34m([0m[0mlp[0m[0;34m)[0m [0;32mfor[0m [0mlp[0m [0;32min[0m [0mlpaths[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    278[0m         [0;34m[[0m[0mos[0m[0;34m.[0m[0mmakedirs[0m[0;34m([0m[0md[0m[0;34m,[0m [0mexist_ok[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m [0;32mfor[0m [0md[0m [0;32min[0m [0mdirs[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 279[0;31m         return await asyncio.gather(
[0m[1;32m    280[0m             *[
[1;32m    281[0m                 [0mself[0m[0;34m.[0m[0m_get_file[0m[0;34m([0m[0mrpath[0m[0;34m,[0m [0mlpath[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/implementations/http.py[0m in [0;36m_get_file[0;34m(self, rpath, lpath, chunk_size, **kwargs)[0m
[1;32m    180[0m             [0;32mif[0m [0mr[0m[0;34m.[0m[0mstatus[0m [0;34m==[0m [0;36m404[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    181[0m                 [0;32mraise[0m [0mFileNotFoundError[0m[0;34m([0m[0mrpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 182[0;31m             [0mr[0m[0;34m.[0m[0mraise_for_status[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    183[0m             [0;32mwith[0m [0mopen[0m[0;34m([0m[0mlpath[0m[0;34m,[0m [0;34m"wb"[0m[0;34m)[0m [0;32mas[0m [0mfd[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    184[0m                 [0mchunk[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/aiohttp/client_reqrep.py[0m in [0;36mraise_for_status[0;34m(self)[0m
[1;32m    998[0m             [0;32massert[0m [0mself[0m[0;34m.[0m[0mreason[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    999[0m             [0mself[0m[0;34m.[0m[0mrelease[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1000[0;31m             raise ClientResponseError(
[0m[1;32m   1001[0m                 [0mself[0m[0;34m.[0m[0mrequest_info[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1002[0m                 [0mself[0m[0;34m.[0m[0mhistory[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;31mClientResponseError[0m: 504, message='Gateway Time-out', url=URL('https://hs.pangaea.de/Projects/AC3/ACLOUD_dropsondes/DS_ACLOUD_Flight_05_20170525_V2.nc')
ClientResponseError: 504, message='Gateway Time-out', url=URL('https://hs.pangaea.de/Projects/AC3/ACLOUD_dropsondes/DS_ACLOUD_Flight_05_20170525_V2.nc')

