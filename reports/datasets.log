Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%matplotlib inline
import ac3airborne
import matplotlib.pyplot as plt
import numpy as np
plt.style.use("mplstyle/book")

# load intake catalog and flight segments
cat = ac3airborne.get_intake_catalog()
meta = ac3airborne.get_flight_segments()

# store data availability in a matrix
data_availability = np.zeros(shape=(len(list(cat['P5'])),
                                    len(list(meta['P5']))))
for i, dataset in enumerate(list(cat['P5'])):
    data_availability[i, :] = np.isin(list(meta['P5']), 
                                      list(cat['P5'][dataset]))

# plot data availability
fig, ax = plt.subplots(1, 1, figsize=(10, 15), dpi=200,
                       constrained_layout=True)

ax.pcolormesh(range(data_availability.shape[0]), 
              range(data_availability.shape[1]), 
              data_availability.T, 
              shading='nearest',
              vmin=0, 
              vmax=1, 
              cmap='RdYlGn', 
              edgecolors='#eeeeee')

ax.set_xticks(range(data_availability.shape[0]))
ax.set_yticks(range(data_availability.shape[1]))

ax.set_xticklabels(list(list(cat['P5'])), rotation=90)
ax.set_yticklabels(list(list(meta['P5'])))

ax.tick_params(labeltop=True)
ax.invert_yaxis()

plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mScannerError[0m                              Traceback (most recent call last)
[0;32m<ipython-input-1-865de57a1d04>[0m in [0;36m<module>[0;34m[0m
[1;32m     14[0m [0;32mfor[0m [0mi[0m[0;34m,[0m [0mdataset[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mlist[0m[0;34m([0m[0mcat[0m[0;34m[[0m[0;34m'P5'[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     15[0m     data_availability[i, :] = np.isin(list(meta['P5']), 
[0;32m---> 16[0;31m                                       list(cat['P5'][dataset]))
[0m[1;32m     17[0m [0;34m[0m[0m
[1;32m     18[0m [0;31m# plot data availability[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/base.py[0m in [0;36m__getitem__[0;34m(self, key)[0m
[1;32m    385[0m             [0me[0m[0;34m.[0m[0m_catalog[0m [0;34m=[0m [0mself[0m[0;34m[0m[0;34m[0m[0m
[1;32m    386[0m             [0me[0m[0;34m.[0m[0m_pmode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpmode[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 387[0;31m             [0;32mreturn[0m [0me[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    388[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0mkey[0m[0;34m,[0m [0mstr[0m[0;34m)[0m [0;32mand[0m [0;34m'.'[0m [0;32min[0m [0mkey[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    389[0m             [0mkey[0m [0;34m=[0m [0mkey[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m'.'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/entry.py[0m in [0;36m__call__[0;34m(self, persist, **kwargs)[0m
[1;32m     75[0m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m'Persist value (%s) not understood'[0m [0;34m%[0m [0mpersist[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     76[0m         [0mpersist[0m [0;34m=[0m [0mpersist[0m [0;32mor[0m [0mself[0m[0;34m.[0m[0m_pmode[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 77[0;31m         [0ms[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     78[0m         [0;32mif[0m [0mpersist[0m [0;34m!=[0m [0;34m'never'[0m [0;32mand[0m [0ms[0m[0;34m.[0m[0mhas_been_persisted[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     79[0m             [0;32mfrom[0m [0;34m.[0m[0;34m.[0m[0mcontainer[0m[0;34m.[0m[0mpersist[0m [0;32mimport[0m [0mstore[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36mget[0;34m(self, **user_parameters)[0m
[1;32m    279[0m         [0;34m"""Instantiate the DataSource for the given parameters"""[0m[0;34m[0m[0;34m[0m[0m
[1;32m    280[0m         [0mplugin[0m[0;34m,[0m [0mopen_args[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_create_open_args[0m[0;34m([0m[0muser_parameters[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 281[0;31m         [0mdata_source[0m [0;34m=[0m [0mplugin[0m[0;34m([0m[0;34m**[0m[0mopen_args[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    282[0m         [0mdata_source[0m[0;34m.[0m[0mcatalog_object[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_catalog[0m[0;34m[0m[0;34m[0m[0m
[1;32m    283[0m         [0mdata_source[0m[0;34m.[0m[0mname[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mname[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36m__init__[0;34m(self, path, autoreload, **kwargs)[0m
[1;32m    550[0m         [0mself[0m[0;34m.[0m[0mautoreload[0m [0;34m=[0m [0mautoreload[0m  [0;31m# set this to False if don't want reloads[0m[0;34m[0m[0;34m[0m[0m
[1;32m    551[0m         [0mself[0m[0;34m.[0m[0mfilesystem[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0;34m'fs'[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 552[0;31m         [0msuper[0m[0;34m([0m[0mYAMLFileCatalog[0m[0;34m,[0m [0mself[0m[0;34m)[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    553[0m [0;34m[0m[0m
[1;32m    554[0m     [0;32mdef[0m [0m_load[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mreload[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/base.py[0m in [0;36m__init__[0;34m(self, name, description, metadata, auth, ttl, getenv, getshell, persist_mode, storage_options, *args)[0m
[1;32m    111[0m         [0mself[0m[0;34m.[0m[0mupdated[0m [0;34m=[0m [0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    112[0m         [0mself[0m[0;34m.[0m[0m_entries[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_make_entries_container[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 113[0;31m         [0mself[0m[0;34m.[0m[0mforce_reload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    114[0m [0;34m[0m[0m
[1;32m    115[0m     [0;34m@[0m[0mclassmethod[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/base.py[0m in [0;36mforce_reload[0;34m(self)[0m
[1;32m    168[0m     [0;32mdef[0m [0mforce_reload[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    169[0m         [0;34m"""Imperative reload data now"""[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 170[0;31m         [0mself[0m[0;34m.[0m[0m_load[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    171[0m         [0mself[0m[0;34m.[0m[0mupdated[0m [0;34m=[0m [0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    172[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36m_load[0;34m(self, reload)[0m
[1;32m    580[0m                 [0mlogger[0m[0;34m.[0m[0mwarning[0m[0;34m([0m[0;34m"Use of '!template' deprecated - fixing"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    581[0m                 [0mtext[0m [0;34m=[0m [0mtext[0m[0;34m.[0m[0mreplace[0m[0;34m([0m[0;34m'!template '[0m[0;34m,[0m [0;34m''[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 582[0;31m             [0mself[0m[0;34m.[0m[0mparse[0m[0;34m([0m[0mtext[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    583[0m [0;34m[0m[0m
[1;32m    584[0m     [0;32mdef[0m [0madd[0m[0;34m([0m[0mself[0m[0;34m,[0m [0msource[0m[0;34m,[0m [0mname[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mpath[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mstorage_options[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36mparse[0;34m(self, text)[0m
[1;32m    649[0m         """
[1;32m    650[0m         [0mself[0m[0;34m.[0m[0mtext[0m [0;34m=[0m [0mtext[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 651[0;31m         [0mdata[0m [0;34m=[0m [0myaml_load[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mtext[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    652[0m [0;34m[0m[0m
[1;32m    653[0m         [0;32mif[0m [0mdata[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/utils.py[0m in [0;36myaml_load[0;34m(stream)[0m
[1;32m     73[0m     [0;34m"""Parse YAML in a context where duplicate keys raise exception"""[0m[0;34m[0m[0;34m[0m[0m
[1;32m     74[0m     [0;32mwith[0m [0mno_duplicate_yaml[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 75[0;31m         [0;32mreturn[0m [0myaml[0m[0;34m.[0m[0msafe_load[0m[0;34m([0m[0mstream[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     76[0m [0;34m[0m[0m
[1;32m     77[0m [0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/__init__.py[0m in [0;36msafe_load[0;34m(stream)[0m
[1;32m    160[0m     [0mto[0m [0mbe[0m [0msafe[0m [0;32mfor[0m [0muntrusted[0m [0minput[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    161[0m     """
[0;32m--> 162[0;31m     [0;32mreturn[0m [0mload[0m[0;34m([0m[0mstream[0m[0;34m,[0m [0mSafeLoader[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    163[0m [0;34m[0m[0m
[1;32m    164[0m [0;32mdef[0m [0msafe_load_all[0m[0;34m([0m[0mstream[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/__init__.py[0m in [0;36mload[0;34m(stream, Loader)[0m
[1;32m    112[0m     [0mloader[0m [0;34m=[0m [0mLoader[0m[0;34m([0m[0mstream[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    113[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 114[0;31m         [0;32mreturn[0m [0mloader[0m[0;34m.[0m[0mget_single_data[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    115[0m     [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    116[0m         [0mloader[0m[0;34m.[0m[0mdispose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/constructor.py[0m in [0;36mget_single_data[0;34m(self)[0m
[1;32m     47[0m     [0;32mdef[0m [0mget_single_data[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     48[0m         [0;31m# Ensure that the stream contains a single document and construct it.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 49[0;31m         [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_single_node[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     50[0m         [0;32mif[0m [0mnode[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     51[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mconstruct_document[0m[0;34m([0m[0mnode[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mget_single_node[0;34m(self)[0m
[1;32m     34[0m         [0mdocument[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m         [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0mcheck_event[0m[0;34m([0m[0mStreamEndEvent[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m             [0mdocument[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_document[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;31m# Ensure that the stream contains no more documents.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_document[0;34m(self)[0m
[1;32m     53[0m [0;34m[0m[0m
[1;32m     54[0m         [0;31m# Compose the root node.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 55[0;31m         [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_node[0m[0;34m([0m[0;32mNone[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     56[0m [0;34m[0m[0m
[1;32m     57[0m         [0;31m# Drop the DOCUMENT-END event.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_node[0;34m(self, parent, index)[0m
[1;32m     82[0m             [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_sequence_node[0m[0;34m([0m[0manchor[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     83[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0mcheck_event[0m[0;34m([0m[0mMappingStartEvent[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 84[0;31m             [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_mapping_node[0m[0;34m([0m[0manchor[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     85[0m         [0mself[0m[0;34m.[0m[0mascend_resolver[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     86[0m         [0;32mreturn[0m [0mnode[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_mapping_node[0;34m(self, anchor)[0m
[1;32m    131[0m             [0;31m#    raise ComposerError("while composing a mapping", start_event.start_mark,[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    132[0m             [0;31m#            "found duplicate key", key_event.start_mark)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 133[0;31m             [0mitem_value[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_node[0m[0;34m([0m[0mnode[0m[0;34m,[0m [0mitem_key[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    134[0m             [0;31m#node.value[item_key] = item_value[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    135[0m             [0mnode[0m[0;34m.[0m[0mvalue[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0;34m([0m[0mitem_key[0m[0;34m,[0m [0mitem_value[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_node[0;34m(self, parent, index)[0m
[1;32m     82[0m             [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_sequence_node[0m[0;34m([0m[0manchor[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     83[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0mcheck_event[0m[0;34m([0m[0mMappingStartEvent[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 84[0;31m             [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_mapping_node[0m[0;34m([0m[0manchor[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     85[0m         [0mself[0m[0;34m.[0m[0mascend_resolver[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     86[0m         [0;32mreturn[0m [0mnode[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_mapping_node[0;34m(self, anchor)[0m
[1;32m    131[0m             [0;31m#    raise ComposerError("while composing a mapping", start_event.start_mark,[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    132[0m             [0;31m#            "found duplicate key", key_event.start_mark)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 133[0;31m             [0mitem_value[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_node[0m[0;34m([0m[0mnode[0m[0;34m,[0m [0mitem_key[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    134[0m             [0;31m#node.value[item_key] = item_value[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    135[0m             [0mnode[0m[0;34m.[0m[0mvalue[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0;34m([0m[0mitem_key[0m[0;34m,[0m [0mitem_value[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_node[0;34m(self, parent, index)[0m
[1;32m     82[0m             [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_sequence_node[0m[0;34m([0m[0manchor[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     83[0m         [0;32melif[0m [0mself[0m[0;34m.[0m[0mcheck_event[0m[0;34m([0m[0mMappingStartEvent[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 84[0;31m             [0mnode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_mapping_node[0m[0;34m([0m[0manchor[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     85[0m         [0mself[0m[0;34m.[0m[0mascend_resolver[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     86[0m         [0;32mreturn[0m [0mnode[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/composer.py[0m in [0;36mcompose_mapping_node[0;34m(self, anchor)[0m
[1;32m    125[0m         [0;32mif[0m [0manchor[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    126[0m             [0mself[0m[0;34m.[0m[0manchors[0m[0;34m[[0m[0manchor[0m[0;34m][0m [0;34m=[0m [0mnode[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 127[0;31m         [0;32mwhile[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0mcheck_event[0m[0;34m([0m[0mMappingEndEvent[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    128[0m             [0;31m#key_event = self.peek_event()[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    129[0m             [0mitem_key[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcompose_node[0m[0;34m([0m[0mnode[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/parser.py[0m in [0;36mcheck_event[0;34m(self, *choices)[0m
[1;32m     96[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mcurrent_event[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     97[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mstate[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 98[0;31m                 [0mself[0m[0;34m.[0m[0mcurrent_event[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mstate[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     99[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mcurrent_event[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    100[0m             [0;32mif[0m [0;32mnot[0m [0mchoices[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/parser.py[0m in [0;36mparse_block_mapping_key[0;34m(self)[0m
[1;32m    426[0m [0;34m[0m[0m
[1;32m    427[0m     [0;32mdef[0m [0mparse_block_mapping_key[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 428[0;31m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mcheck_token[0m[0;34m([0m[0mKeyToken[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    429[0m             [0mtoken[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_token[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    430[0m             [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0mcheck_token[0m[0;34m([0m[0mKeyToken[0m[0;34m,[0m [0mValueToken[0m[0;34m,[0m [0mBlockEndToken[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/scanner.py[0m in [0;36mcheck_token[0;34m(self, *choices)[0m
[1;32m    114[0m         [0;31m# Check if the next token is one of the given types.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    115[0m         [0;32mwhile[0m [0mself[0m[0;34m.[0m[0mneed_more_tokens[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 116[0;31m             [0mself[0m[0;34m.[0m[0mfetch_more_tokens[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mtokens[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    118[0m             [0;32mif[0m [0;32mnot[0m [0mchoices[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/scanner.py[0m in [0;36mfetch_more_tokens[0;34m(self)[0m
[1;32m    221[0m         [0;31m# Is it the value indicator?[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    222[0m         [0;32mif[0m [0mch[0m [0;34m==[0m [0;34m':'[0m [0;32mand[0m [0mself[0m[0;34m.[0m[0mcheck_value[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 223[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mfetch_value[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    224[0m [0;34m[0m[0m
[1;32m    225[0m         [0;31m# Is it an alias?[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3/dist-packages/yaml/scanner.py[0m in [0;36mfetch_value[0;34m(self)[0m
[1;32m    575[0m                 [0;31m# we can start a simple key.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    576[0m                 [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0mallow_simple_key[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 577[0;31m                     raise ScannerError(None, None,
[0m[1;32m    578[0m                             [0;34m"mapping values are not allowed here"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    579[0m                             self.get_mark())

[0;31mScannerError[0m: mapping values are not allowed here
  in "<unicode string>", line 47, column 9:
        args:
            ^
ScannerError: mapping values are not allowed here
  in "<unicode string>", line 47, column 9:
        args:
            ^

