Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.8/dist-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/lib/python3.8/dist-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
data_availability(mission='HALO-AC3', platform='HALO')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mClientResponseError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_599784/2166745959.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mdata_availability[0m[0;34m([0m[0mmission[0m[0;34m=[0m[0;34m'HALO-AC3'[0m[0;34m,[0m [0mplatform[0m[0;34m=[0m[0;34m'HALO'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/tmp/ipykernel_599784/717516275.py[0m in [0;36mdata_availability[0;34m(mission, platform)[0m
[1;32m     23[0m     [0;32mfor[0m [0mi[0m[0;34m,[0m [0mdataset[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mlist[0m[0;34m([0m[0mcat[0m[0;34m[[0m[0mmission[0m[0;34m][0m[0;34m[[0m[0mplatform[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m         data_availability[i, :] = np.isin(list(meta[mission][platform]), 
[0;32m---> 25[0;31m                                           list(cat[mission][platform][dataset]))
[0m[1;32m     26[0m [0;34m[0m[0m
[1;32m     27[0m     [0;31m# plot data availability[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/base.py[0m in [0;36m__getitem__[0;34m(self, key)[0m
[1;32m    385[0m             [0me[0m[0;34m.[0m[0m_catalog[0m [0;34m=[0m [0mself[0m[0;34m[0m[0;34m[0m[0m
[1;32m    386[0m             [0me[0m[0;34m.[0m[0m_pmode[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpmode[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 387[0;31m             [0;32mreturn[0m [0me[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    388[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0mkey[0m[0;34m,[0m [0mstr[0m[0;34m)[0m [0;32mand[0m [0;34m'.'[0m [0;32min[0m [0mkey[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    389[0m             [0mkey[0m [0;34m=[0m [0mkey[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m'.'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/entry.py[0m in [0;36m__call__[0;34m(self, persist, **kwargs)[0m
[1;32m     75[0m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m'Persist value (%s) not understood'[0m [0;34m%[0m [0mpersist[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     76[0m         [0mpersist[0m [0;34m=[0m [0mpersist[0m [0;32mor[0m [0mself[0m[0;34m.[0m[0m_pmode[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 77[0;31m         [0ms[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     78[0m         [0;32mif[0m [0mpersist[0m [0;34m!=[0m [0;34m'never'[0m [0;32mand[0m [0ms[0m[0;34m.[0m[0mhas_been_persisted[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     79[0m             [0;32mfrom[0m [0;34m.[0m[0;34m.[0m[0mcontainer[0m[0;34m.[0m[0mpersist[0m [0;32mimport[0m [0mstore[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36mget[0;34m(self, **user_parameters)[0m
[1;32m    279[0m         [0;34m"""Instantiate the DataSource for the given parameters"""[0m[0;34m[0m[0;34m[0m[0m
[1;32m    280[0m         [0mplugin[0m[0;34m,[0m [0mopen_args[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_create_open_args[0m[0;34m([0m[0muser_parameters[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 281[0;31m         [0mdata_source[0m [0;34m=[0m [0mplugin[0m[0;34m([0m[0;34m**[0m[0mopen_args[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    282[0m         [0mdata_source[0m[0;34m.[0m[0mcatalog_object[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_catalog[0m[0;34m[0m[0;34m[0m[0m
[1;32m    283[0m         [0mdata_source[0m[0;34m.[0m[0mname[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mname[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36m__init__[0;34m(self, path, autoreload, **kwargs)[0m
[1;32m    550[0m         [0mself[0m[0;34m.[0m[0mautoreload[0m [0;34m=[0m [0mautoreload[0m  [0;31m# set this to False if don't want reloads[0m[0;34m[0m[0;34m[0m[0m
[1;32m    551[0m         [0mself[0m[0;34m.[0m[0mfilesystem[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0;34m'fs'[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 552[0;31m         [0msuper[0m[0;34m([0m[0mYAMLFileCatalog[0m[0;34m,[0m [0mself[0m[0;34m)[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    553[0m [0;34m[0m[0m
[1;32m    554[0m     [0;32mdef[0m [0m_load[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mreload[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/base.py[0m in [0;36m__init__[0;34m(self, name, description, metadata, auth, ttl, getenv, getshell, persist_mode, storage_options, *args)[0m
[1;32m    111[0m         [0mself[0m[0;34m.[0m[0mupdated[0m [0;34m=[0m [0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    112[0m         [0mself[0m[0;34m.[0m[0m_entries[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_make_entries_container[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 113[0;31m         [0mself[0m[0;34m.[0m[0mforce_reload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    114[0m [0;34m[0m[0m
[1;32m    115[0m     [0;34m@[0m[0mclassmethod[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/base.py[0m in [0;36mforce_reload[0;34m(self)[0m
[1;32m    168[0m     [0;32mdef[0m [0mforce_reload[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    169[0m         [0;34m"""Imperative reload data now"""[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 170[0;31m         [0mself[0m[0;34m.[0m[0m_load[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    171[0m         [0mself[0m[0;34m.[0m[0mupdated[0m [0;34m=[0m [0mtime[0m[0;34m.[0m[0mtime[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    172[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/intake/catalog/local.py[0m in [0;36m_load[0;34m(self, reload)[0m
[1;32m    576[0m [0;34m[0m[0m
[1;32m    577[0m             [0;32mwith[0m [0mfile_open[0m [0;32mas[0m [0mf[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 578[0;31m                 [0mtext[0m [0;34m=[0m [0mf[0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mdecode[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    579[0m             [0;32mif[0m [0;34m"!template "[0m [0;32min[0m [0mtext[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    580[0m                 [0mlogger[0m[0;34m.[0m[0mwarning[0m[0;34m([0m[0;34m"Use of '!template' deprecated - fixing"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/implementations/http.py[0m in [0;36mread[0;34m(self, length)[0m
[1;32m    437[0m             )  # all fits in one block anyway
[1;32m    438[0m         ):
[0;32m--> 439[0;31m             [0mself[0m[0;34m.[0m[0m_fetch_all[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    440[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0msize[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    441[0m             [0;32mif[0m [0mlength[0m [0;34m<[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    119[0m     [0;32mdef[0m [0mwrapper[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    120[0m         [0mself[0m [0;34m=[0m [0mobj[0m [0;32mor[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 121[0;31m         [0;32mreturn[0m [0mmaybe_sync[0m[0;34m([0m[0mfunc[0m[0;34m,[0m [0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    122[0m [0;34m[0m[0m
[1;32m    123[0m     [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36mmaybe_sync[0;34m(func, self, *args, **kwargs)[0m
[1;32m     98[0m         [0;32mif[0m [0minspect[0m[0;34m.[0m[0miscoroutinefunction[0m[0;34m([0m[0mfunc[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     99[0m             [0;31m# run the awaitable on the loop[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 100[0;31m             [0;32mreturn[0m [0msync[0m[0;34m([0m[0mloop[0m[0;34m,[0m [0mfunc[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    101[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    102[0m             [0;31m# just call the blocking function[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36msync[0;34m(loop, func, callback_timeout, *args, **kwargs)[0m
[1;32m     69[0m     [0;32mif[0m [0merror[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     70[0m         [0mtyp[0m[0;34m,[0m [0mexc[0m[0;34m,[0m [0mtb[0m [0;34m=[0m [0merror[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 71[0;31m         [0;32mraise[0m [0mexc[0m[0;34m.[0m[0mwith_traceback[0m[0;34m([0m[0mtb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     72[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     73[0m         [0;32mreturn[0m [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/asyn.py[0m in [0;36mf[0;34m()[0m
[1;32m     53[0m             [0;32mif[0m [0mcallback_timeout[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     54[0m                 [0mfuture[0m [0;34m=[0m [0masyncio[0m[0;34m.[0m[0mwait_for[0m[0;34m([0m[0mfuture[0m[0;34m,[0m [0mcallback_timeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 55[0;31m             [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m=[0m [0;32mawait[0m [0mfuture[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     56[0m         [0;32mexcept[0m [0mException[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     57[0m             [0merror[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m=[0m [0msys[0m[0;34m.[0m[0mexc_info[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.8/dist-packages/fsspec/implementations/http.py[0m in [0;36masync_fetch_all[0;34m(self)[0m
[1;32m    454[0m             [0mr[0m [0;34m=[0m [0;32mawait[0m [0mself[0m[0;34m.[0m[0msession[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mself[0m[0;34m.[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mself[0m[0;34m.[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    455[0m             [0;32masync[0m [0;32mwith[0m [0mr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 456[0;31m                 [0mr[0m[0;34m.[0m[0mraise_for_status[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    457[0m                 [0mout[0m [0;34m=[0m [0;32mawait[0m [0mr[0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    458[0m                 self.cache = AllBytes(

[0;32m/usr/local/lib/python3.8/dist-packages/aiohttp/client_reqrep.py[0m in [0;36mraise_for_status[0;34m(self)[0m
[1;32m    998[0m             [0;32massert[0m [0mself[0m[0;34m.[0m[0mreason[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    999[0m             [0mself[0m[0;34m.[0m[0mrelease[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1000[0;31m             raise ClientResponseError(
[0m[1;32m   1001[0m                 [0mself[0m[0;34m.[0m[0mrequest_info[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1002[0m                 [0mself[0m[0;34m.[0m[0mhistory[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;31mClientResponseError[0m: 404, message='Not Found', url=URL('https://raw.githubusercontent.com/igmk/ac3airborne-intake/halo-ac3/HALO-AC3/HALO/gopro.yaml')
ClientResponseError: 404, message='Not Found', url=URL('https://raw.githubusercontent.com/igmk/ac3airborne-intake/halo-ac3/HALO-AC3/HALO/gopro.yaml')

